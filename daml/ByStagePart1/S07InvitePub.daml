{-# LANGUAGE ApplicativeDo #-}

daml 1.2
module ByStagePart1.S07InvitePub
where

data CardDescription = CardDescription with
    publisher: Party
    cardText: Text
  deriving (Eq, Show)

template ProposeMarket
    with
        manager: Party
        auditor: Party
    where
        signatory manager

        controller auditor can
            AcceptMarket: ContractId Marketplace
                do create $ Marketplace manager auditor [] []

template Marketplace
    with
        manager: Party
        auditor: Party
        publishers: [Party]
        invitedPublishers: [Party]
    where
        signatory manager, auditor
        observer publishers, invitedPublishers

        ----------------------------------------------------------------------
        -- The auditor can regulate entry into the market by restricting
        --   the manager to specific workflows when adding publishers, even
        --   though the publishers are not signatories to the contract
        ----------------------------------------------------------------------
        controller manager can
            InvitePublisher: ContractId Marketplace
                with
                    invitee: Party
                do
                    assert $ invitee `notElem` invitedPublishers
                    assert $ invitee `notElem` publishers
                    create this with invitedPublishers = invitee :: invitedPublishers

template Card
    with
        manager: Party
        auditor: Party
        owner: Party
        description: CardDescription
    where
        signatory owner, manager, auditor, description.publisher

demoCreateMarket = scenario do
    -----------------
    -- Market Setup
    -----------------

    -- Set up the participants in the marketplace
    -- Market operator and regulator/auditor
    manager <- getParty "I want the money"
    auditor <- getParty "You cant have it"
    -- Publishers
    inlandSorc <- getParty "Inland Sorcerers"
    nineDisc <- getParty "Nine Disc Publishers"
    -- Gamers
    alice <- getParty "Alice"
    bob <- getParty "Bob"

    -- Setup the market and have the participants join
    mkp <- manager `submit` create ProposeMarket with manager; auditor
    market <- auditor `submit` exercise mkp AcceptMarket

    pure ()
